name: Tests with Kong

on:
  push
#   pull_request: {}
#   push:
#     branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
  
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:
        # TODO: arm64
        # latest and one version older for valgrind
        # - nginx: "1.19.3"
        #   openssl: "1.1.1n"
        #   valgrind: "valgrind"
        #   lua_nginx_module: "v0.10.19"
        #   lua_resty_core: "v0.1.21"
        # - nginx: "1.19.9"
        #   openssl: "1.1.1n"
        #   valgrind: "valgrind"
        #   lua_nginx_module: "v0.10.20"
        #   lua_resty_core: "v0.1.22"
        - nginx: "1.21.4"
          openssl: "1.1.1s"
          valgrind: "valgrind"
          lua_nginx_module: "v0.10.21"
          lua_resty_core: "v0.1.23"

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: 'true'
        
    # - uses: actions/checkout@v2
    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1

    # - name: Install packages
    #   if: steps.cache-deps.outputs.cache-hit != 'true'
    #   run: sudo apt update && sudo apt install libyaml-dev valgrind libprotobuf-dev

    - name: Dump GitHub context
      id: github_context_step
      run: echo '${{ toJSON(github) }}'
    - name: Dump job context
      run: echo '${{ toJSON(job) }}'
    - name: Dump steps context
      run: echo '${{ toJSON(steps) }}'
    - name: Dump runner context
      run: echo '${{ toJSON(runner) }}'
    - name: Dump strategy context
      run: echo '${{ toJSON(strategy) }}'
    - name: Dump matrix context
      run: echo '${{ toJSON(matrix) }}'
